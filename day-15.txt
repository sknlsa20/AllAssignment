Day - 15:

	-> Recap :

		spring MVC -> annotations -> excluding xml content

		WebApplicationInitializer -> startup -> DispatcherServlet -> 

	ApplicationConfig -> @EnableWebMvc
			-> @ComponentScan -> service, controller, model
			-> @Configuration -> bean factory 
			-> @Bean -> 
			-> crud application 
			-> @autowired
			-> @Controller
			-> @RequestMapping
			-> @PathVariable
			-> @ModelAttribute
			-> @RequestParam
			-> @Put
			->@Get
			-> @Post
			-> @Delete

------------------------------------------------------------------------------------------------------

		Git & github : 

	what is git? 
		-> linus torvald -> linux os -> 

		-> Distributed version controlling system. -> small or big project can be managed.
	Git 
		-> it is a revision control system used to track changes in our files. It's a tool to manage our code and file history.

	Cycle:

	-> Working area ->(add) staging area ->(commit) local repository ->(push) remote repository
	=> remote repository -> (fetch) -> pull -> working area

	GitHub 

		-> it is also revision control system used to track changes in our remote repository and manage our projects and file history remotely.



	Use case of two roles: 

	Manager

	-> create a project 
	-> create a local repository
	-> add project or files ->ADD->commit->  local repository
	-> pushing into remote repository
	-> anouncing to developer to pull request.

		steps inside eclipse:
		-> created a project
		-> searching for git repository
		-> right click on project -> team -> share -> create new repository
		-> right click on project -> team -> add to indexes -> staging area
		-> right click on project -> team -> commit -> entering emailid -> local repository
		-> opening remote repository -> create new repository -> enter name of repository
			-> entered description -> selected public -> create repository

		-> To generate personal token for security -> profile -> settings -> developer settings 				-> personal access tokens -> generate new token -> copy and save token

		-> coping url from remote repository -> paste it in push window

			-> enter username 
			-> token password 
				-> next
				-> advanced push
				-> url -> username and token password 
				-> source ref -> master -> add spec -> push


		-> adding collaborators -> settings of repository -> Collaborators -> add people


	Developer :
		-> Accept invitation
		-> eclipse -> git repository
		-> clone remote repo to local repo
		=> remote repository -> local repository -> 
		-> file -> import project -> git  -> existing local repository -> working area 
		-> add/modify/ delete / test cases / features
		-> create new branch in remote repo using eclipse
		-> right click on project -> select -> add to index
		-> right click on project -> select -> commit
		-> right click on branch -> push -> username and password
		-> remote repository -> new branch will be created.
		-> new branch -> new pull request -> sent to manager 



	-> review should happen by manger and get merge request.






	
